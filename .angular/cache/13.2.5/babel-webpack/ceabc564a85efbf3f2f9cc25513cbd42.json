{"ast":null,"code":"import _asyncToGenerator from \"/Users/pkarki10/Documents/simplilearn/FinalProject/frontend/eCommerce-Medicare/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { baseUrls } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginServiceService {\n  constructor(http) {\n    this.http = http;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n\n  adminlogin(data) {\n    console.log(\"inside\");\n    return this.http.post(`${baseUrls}/isAdmin`, data);\n  }\n\n  createuser(data) {\n    console.log(\"inside\");\n    return this.http.post(`${baseUrls}/createUser`, data);\n  }\n\n  sendGetMedicineRequest() {\n    console.log(\"inside sendGetMedicineRequest\");\n    return this.http.get(`${baseUrls}/getAllMedicine`, this.httpOptions);\n  }\n\n  sendGetMedicineByIdRequest(data) {\n    console.log(\"inside sendGetMedicineByIdRequest\");\n    return this.http.post(`${baseUrls}/searchMedicineById`, data, this.httpOptions);\n  }\n\n  sendUpdateMedicineByIdRequest(data) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(\"inside sendGetMedicineByIdRequest\");\n      return _this.http.post(`${baseUrls}/updateMedicine`, data, _this.httpOptions);\n    })();\n  }\n\n}\n\nLoginServiceService.ɵfac = function LoginServiceService_Factory(t) {\n  return new (t || LoginServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nLoginServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginServiceService,\n  factory: LoginServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/pkarki10/Documents/simplilearn/FinalProject/frontend/eCommerce-Medicare/src/app/login-service.service.ts"],"names":["HttpHeaders","baseUrls","i0","i1","LoginServiceService","constructor","http","httpOptions","headers","adminlogin","data","console","log","post","createuser","sendGetMedicineRequest","get","sendGetMedicineByIdRequest","sendUpdateMedicineByIdRequest","ɵfac","LoginServiceService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,WAAT,QAA4B,sBAA5B;AACA,SAASC,QAAT,QAAyB,8BAAzB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,mBAAN,CAA0B;AAC7BC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,WAAL,GAAmB;AACfC,MAAAA,OAAO,EAAE,IAAIR,WAAJ,CAAgB;AAAE,wBAAgB;AAAlB,OAAhB;AADM,KAAnB;AAGH;;AACDS,EAAAA,UAAU,CAACC,IAAD,EAAO;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,WAAO,KAAKN,IAAL,CAAUO,IAAV,CAAgB,GAAEZ,QAAS,UAA3B,EAAsCS,IAAtC,CAAP;AACH;;AACDI,EAAAA,UAAU,CAACJ,IAAD,EAAO;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,WAAO,KAAKN,IAAL,CAAUO,IAAV,CAAgB,GAAEZ,QAAS,aAA3B,EAAyCS,IAAzC,CAAP;AACH;;AACDK,EAAAA,sBAAsB,GAAG;AACrBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA,WAAO,KAAKN,IAAL,CAAUU,GAAV,CAAe,GAAEf,QAAS,iBAA1B,EAA4C,KAAKM,WAAjD,CAAP;AACH;;AACDU,EAAAA,0BAA0B,CAACP,IAAD,EAAO;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACA,WAAO,KAAKN,IAAL,CAAUO,IAAV,CAAgB,GAAEZ,QAAS,qBAA3B,EAAiDS,IAAjD,EAAuD,KAAKH,WAA5D,CAAP;AACH;;AACKW,EAAAA,6BAA6B,CAACR,IAAD,EAAO;AAAA;;AAAA;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACA,aAAO,KAAI,CAACN,IAAL,CAAUO,IAAV,CAAgB,GAAEZ,QAAS,iBAA3B,EAA6CS,IAA7C,EAAmD,KAAI,CAACH,WAAxD,CAAP;AAFsC;AAGzC;;AA1B4B;;AA4BjCH,mBAAmB,CAACe,IAApB,GAA2B,SAASC,2BAAT,CAAqCC,CAArC,EAAwC;AAAE,SAAO,KAAKA,CAAC,IAAIjB,mBAAV,EAA+BF,EAAE,CAACoB,QAAH,CAAYnB,EAAE,CAACoB,UAAf,CAA/B,CAAP;AAAoE,CAAzI;;AACAnB,mBAAmB,CAACoB,KAApB,GAA4B,aAActB,EAAE,CAACuB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEtB,mBAAT;AAA8BuB,EAAAA,OAAO,EAAEvB,mBAAmB,CAACe,IAA3D;AAAiES,EAAAA,UAAU,EAAE;AAA7E,CAAtB,CAA1C","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\nimport { baseUrls } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginServiceService {\n    constructor(http) {\n        this.http = http;\n        this.httpOptions = {\n            headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n        };\n    }\n    adminlogin(data) {\n        console.log(\"inside\");\n        return this.http.post(`${baseUrls}/isAdmin`, data);\n    }\n    createuser(data) {\n        console.log(\"inside\");\n        return this.http.post(`${baseUrls}/createUser`, data);\n    }\n    sendGetMedicineRequest() {\n        console.log(\"inside sendGetMedicineRequest\");\n        return this.http.get(`${baseUrls}/getAllMedicine`, this.httpOptions);\n    }\n    sendGetMedicineByIdRequest(data) {\n        console.log(\"inside sendGetMedicineByIdRequest\");\n        return this.http.post(`${baseUrls}/searchMedicineById`, data, this.httpOptions);\n    }\n    async sendUpdateMedicineByIdRequest(data) {\n        console.log(\"inside sendGetMedicineByIdRequest\");\n        return this.http.post(`${baseUrls}/updateMedicine`, data, this.httpOptions);\n    }\n}\nLoginServiceService.ɵfac = function LoginServiceService_Factory(t) { return new (t || LoginServiceService)(i0.ɵɵinject(i1.HttpClient)); };\nLoginServiceService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: LoginServiceService, factory: LoginServiceService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}