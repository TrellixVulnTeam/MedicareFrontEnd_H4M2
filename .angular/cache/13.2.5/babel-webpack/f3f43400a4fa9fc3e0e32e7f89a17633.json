{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { baseUrls } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let LoginServiceService = /*#__PURE__*/(() => {\n  class LoginServiceService {\n    constructor(http) {\n      this.http = http;\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n\n    adminlogin(data) {\n      console.log(\"inside\");\n      return this.http.post(`${baseUrls}/isAdmin`, data);\n    }\n\n    createuser(data) {\n      console.log(\"inside\");\n      return this.http.post(`${baseUrls}/createUser`, data);\n    }\n\n    createmedicine(data) {\n      console.log(\"inside createmedicine\");\n      return this.http.post(`${baseUrls}/createMedicine`, data);\n    }\n\n    sendGetMedicineRequest() {\n      console.log(\"inside sendGetMedicineRequest\");\n      return this.http.get(`${baseUrls}/getAllMedicine`, this.httpOptions);\n    }\n\n    searchMedicineRequest(data) {\n      console.log(\"inside searchMedicineRequest\");\n      return this.http.post(`${baseUrls}/searchMedicine?searchText=` + data, this.httpOptions);\n    }\n\n    getActiveMedicineRequest() {\n      console.log(\"inside sendGetMedicineRequest\");\n      return this.http.get(`${baseUrls}/getAllActiveMedicine`, this.httpOptions);\n    }\n\n    sendGetMedicineByIdRequest(data) {\n      console.log(\"inside sendGetMedicineByIdRequest\");\n      return this.http.post(`${baseUrls}/searchMedicineById`, data, this.httpOptions);\n    }\n\n    sendUpdateMedicineByIdRequest(data) {\n      console.log(\"What about to send in update \");\n      console.log(data);\n      return this.http.post(`${baseUrls}/updateMedicine`, data, this.httpOptions);\n    }\n\n    sendDeleteMedicineByIdRequest(data) {\n      console.log(\"What about to send in delete \");\n      console.log(data);\n      return this.http.post(`${baseUrls}/deleteMedicineById`, data, this.httpOptions);\n    }\n\n  }\n\n  LoginServiceService.ɵfac = function LoginServiceService_Factory(t) {\n    return new (t || LoginServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  LoginServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginServiceService,\n    factory: LoginServiceService.ɵfac,\n    providedIn: 'root'\n  });\n  return LoginServiceService;\n})();","map":null,"metadata":{},"sourceType":"module"}